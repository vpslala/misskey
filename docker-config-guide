1. Download Misskey


Clone Misskey repository's master branch.
git clone -b master git://github.com/misskey-dev/misskey.git


Move to misskey directory.
cd misskey


Checkout to the latest release tag.
git checkout master



2. Configure Misskey
Create configuration files with following:

cd .config
cp example.yml default.yml
cp docker_example.env docker.env



default.yml

Edit this file the same as non-Docker environment.
However hostname of Postgresql, Redis and Elasticsearch are not localhost, they are set in docker-compose.yml.
The following is default hostname:



Service
Hostname




Postgresql
db


Redis
redis


Elasticsearch
es




docker.env

Configure Postgresql in this file.
The minimum required settings are:



name
Description




POSTGRES_PASSWORD
Password


POSTGRES_USER
Username


POSTGRES_DB
Database name




3. Configure Docker
Edit docker-compose.yml.

4. Build Misskey
Build misskey with the following:
docker-compose build

5. Init DB

docker-compose run --rm web yarn run init



6. That is it.
Well done! Now you have an environment to run Misskey.

Launch normally
Just docker-compose up -d. GLHF!

How to update your Misskey server to the latest version

git stash
git checkout master
git pull
git stash pop
docker-compose build
Check ChangeLog for migration information
docker-compose stop && docker-compose up -d


How to execute cli commands:
docker-compose run --rm web node built/tools/mark-admin @example

If you have any questions or trouble, feel free to contact us!
